/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UNED.ControlCotizaciones.UI;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Fabián
 */
public class MostrarCliente extends javax.swing.JFrame {

    /**
     * Creates new form MostrarCliente
     */
    public MostrarCliente() {
        initComponents();
        this.setTitle("Información del cliente");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblSubtitulo = new javax.swing.JLabel();
        lblIdentificacion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMostrar = new javax.swing.JTextArea();
        txtBusquedaId = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPrestamos = new javax.swing.JTextArea();
        imagenBuscar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        lblTitulo.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(0, 102, 153));
        lblTitulo.setText("Información de clientes");

        lblSubtitulo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblSubtitulo.setText("Por favor, ingrese la identificación.");

        lblIdentificacion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblIdentificacion.setText("Identificación");

        txtMostrar.setEditable(false);
        txtMostrar.setColumns(20);
        txtMostrar.setRows(5);
        jScrollPane1.setViewportView(txtMostrar);

        txtBusquedaId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        btnBuscar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnAceptar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        txtPrestamos.setEditable(false);
        txtPrestamos.setColumns(20);
        txtPrestamos.setRows(5);
        jScrollPane2.setViewportView(txtPrestamos);

        imagenBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UNED/ControlCotizaciones/Imagenes/mostrar_cliente.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblIdentificacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtBusquedaId)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSubtitulo)
                            .addComponent(lblTitulo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(imagenBuscar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSubtitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imagenBuscar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdentificacion)
                    .addComponent(txtBusquedaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /* La imagen de para este JFrame, fue tomada de 
    https://pixabay.com/es/vectors/lupa-vidrio-lupa-vidrio-agrandar-189254/
    
    La propiedad EXIT_ON_CLOSE de MostrarCliente fue sustituida por DISPOSE, con
    el fin de mejorar el funcionamiento del programa.
    https://www.lawebdelprogramador.com/foros/Java/584264-cerrar-JFrame.html
    */
    
    // Método con la funcionalidad del botón Aceptar.
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        this.setVisible(false); // Oculta el JFrame MostrarCliente.
    }//GEN-LAST:event_btnAceptarActionPerformed
    
    // Método para las funcionalidades del botón Buscar.
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscarDatosCliente();
        buscarPrestamosCliente();
    }//GEN-LAST:event_btnBuscarActionPerformed
    
    // Método para realizar la lectura del archivo clientes_prestamos.dat e imprimir la información del cliente.
    public void buscarDatosCliente() {
        FileReader leer = null;
        BufferedReader cargar = null;
        
        try {
            leer = new FileReader("C:\\Users\\monge\\Documents\\NetBeansProjects\\ControlCotizaciones\\clientes_prestamos.dat");
            cargar = new BufferedReader(leer);
            
            String cedula = this.txtBusquedaId.getText();
            String linea = "";
            
            List<String> datos = new ArrayList<>();
            
            while ((linea=cargar.readLine()) != null) {
                datos.add(linea);
            }
                        
            int indice = 0;
            if (datos.contains(cedula)) {
                indice = datos.indexOf(cedula);
                /* Las siguientes variables almacenan los datos del cliente
                de acuerdo al índice en que se encuentra la identificación del
                cliente. Es decir, para cada dato del cliente, se incrementa el
                índice para que sea ubicado y almacenado.
                */
                String iden = datos.get(indice);
                String nombre = datos.get(indice + 1);
                String a1 = datos.get(indice + 2);
                String a2 = datos.get(indice + 3);
                String ingreso = datos.get(indice + 5);
                /* La información almacenada en las variables anteriores es 
                mostrada en el TextArea txtMostrar.
                */
                this.txtMostrar.setText("Identificación: " + iden + "\n" +
                    "Nombre: " + nombre + "\n" +
                    "Primer Apellido: " + a1 + "\n" +
                    "Segundo Apellido: " + a2 + "\n" +
                    "Ingreso Mensual: " + ingreso);
            } else {
                JOptionPane.showMessageDialog(null, "Identificación no registrada.");
            }   
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error.");
        }
        finally {
            if (leer != null) {
                try {
                    leer.close();
                }
                catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "No se pudo cerrar el archivo.");
                }
            }
        }
    }
    
    // Método para realizar la lectura del archivo prestamos_aprobados.dat e imprimir la información del cliente.
    public void buscarPrestamosCliente() {
        FileReader leer = null;
        BufferedReader cargar = null;
        
        try {
            leer = new FileReader("C:\\Users\\monge\\Documents\\NetBeansProjects\\ControlCotizaciones\\prestamos_aprobados.dat");
            cargar = new BufferedReader(leer);
            
            String cedula = this.txtBusquedaId.getText();
            String linea = "";
            
            List<String> datos = new ArrayList<>();
            
            while ((linea=cargar.readLine()) != null) {
                datos.add(linea);
            }
            
            int indice = 0;
            if (datos.contains(cedula)) {
                indice = datos.indexOf(cedula);
            } else {
                JOptionPane.showMessageDialog(null, "El cliente no posee préstamos.");
            }

            String cuotas = ""; // La variable cuotas almacenará cada tipo de préstamo y su monto.
            /* La iteración de el ciclo for se realiza según el tamaño del arreglo, 
            por esa razón, se utiliza el método size().*/
            for (int i = 0; i <= datos.size(); i++) {
                 // Permite verificar que la identificación del cliente se encuentre en el arreglo.
                if (datos.contains(cedula)) {
                    indice = datos.indexOf(cedula);
                }
                if (datos.get(indice).equals(cedula)) { // En caso de que el índice sea igual a cedula...
                    cuotas += (datos.get(indice + 1)) + "\n"; // Se añade el tipo de préstamo...
                    cuotas += (datos.get(indice + 2)) + "\n"; // Y el monto del mismo a la variable cuotas.
                    cuotas += "\n";
                     /* Se remueve el índice en el que se encuentra actualmente 
                    la iteración, con el propósito de continuar la búsqueda de la
                    identificación del cliente hasta que no se presenten 
                    coincidencias entre indice y cédula.*/
                    datos.remove(indice);
                }
            }
            this.txtPrestamos.setText(cuotas); // Se muestran los datos obtenidos en el TextArea txtPrestamos.
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error.");
        }
        finally {
            if (leer != null) {
                try {
                    leer.close();
                }
                catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "No se pudo cerrar el archivo.");
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MostrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MostrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MostrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MostrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MostrarCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel imagenBuscar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblIdentificacion;
    private javax.swing.JLabel lblSubtitulo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtBusquedaId;
    private javax.swing.JTextArea txtMostrar;
    private javax.swing.JTextArea txtPrestamos;
    // End of variables declaration//GEN-END:variables
}
